{
	email admin@nlist.tk
	log {
		output file /var/log/caddy/error.log
		level ERROR
	}
}
(tls_protol) {
	tls {
		ciphers TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
		curves x25519 secp521r1 secp384r1 secp256r1
		alpn http/1.1 h2
	}
}
(web_file) {
	file_server {
		root /usr/share/caddy
	}
}
v1.nlist.tk:443 {
	import web_file
	import tls_protol
	@wsv {
		path /game_service
		header Connection *Upgrade*
		header Upgrade websocket
	}
	reverse_proxy @wsv 127.0.0.1:2082
}

t1.nlist.tk:443 {
	import web_file
	import tls_protol
	@wst {
		header Connection *Upgrade*
		header Upgrade websocket
	}
	reverse_proxy @wst 127.0.0.1:2095
}

https://caddy2.dengxiaolong.com/docs/quick-starts/api


https://www.bilibili.com/read/cv19150062
https://github.com/lxhao61/integrated-examples
https://www.hztdst.com/2102.html
{
  "admin": {"disabled": true},
  "apps": {
    "layer4": {
      "servers": {
        "example0": {
          "listen": [":443"],
          "routes": [
            {
              "match": [{"tls": {"sni": ["example1.com"]}}],
              "handle": [
                {
                  "handler": "proxy",
                  "upstreams": [{"dial": ["example1.com:443"]}]
                }
              ]
            },
            {
              "match": [{"tls": {"sni": ["example2.com"]}}],
              "handle": [
                {
                  "handler": "proxy",
                  "upstreams": [{"dial": ["example2.com:443"]}]
                }
              ]
            }
          ]
        }
      }
    }
  }
}

# reverse_proxy for nginx in site conf
location /xray {
  proxy_pass                       http://127.0.0.1:2086;
  proxy_redirect                   off;
  proxy_http_version               1.1;
  proxy_set_header Upgrade         $http_upgrade;
  proxy_set_header Connection      "upgrade";
  proxy_set_header Host            $http_host;
  proxy_set_header X-Real-IP       $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
}
# https://freeme.ink/2021/06/trojan-nginx-note/
# https://github.com/wulabing/Xray_onekey
# https://xrayr-project.github.io/XrayR-doc/za-xiang/nginx+trojan-zan-shi-di-shen.html
# https://www.chengxiaobai.com/trouble-maker/trojan-shared-443-port-scheme
# in nginx conf between even and http block
user  nginx;

pid   /var/run/nginx.pid;

# 其他配置保持默认即可

# 流量转发核心配置
stream {
    # 这里就是 SNI 识别，将域名映射成一个配置名
    map $ssl_preread_server_name $backend_name {
        # trojan.nlist.xyz trojan;
        # Trojan 流量直接转发到中间层：proxy_trojan
        trojan.nlist.xyz proxy_trojan;
        vmess.nlist.xyz vmess;
        web.nlist.xyz web;
        # 域名都不匹配情况下的默认值
        default web;
    }

    # web，配置转发详情
    upstream web {
        server 127.0.0.1:10240;
    }

    # vmess，配置转发详情
    upstream vmess {
        server 127.0.0.1:10242;
    }

    # trojan，配置转发详情
    upstream trojan {
        server 127.0.0.1:10241;
    }

    upstream proxy_trojan {
        server 127.0.0.1:10249;
    }
    # 这里的 server 就是用来帮 Trojan 卸载代理协议的中间层
    # 原来的 upstream trojan 配置不需要改动
    server {
        listen 10249 proxy_protocol;
        proxy_pass  trojan;
    }
    server {
        listen 443 reuseport; # ssl
        listen [::]:443 reuseport;
        proxy_pass  $backend_name;
        proxy_protocol on; # 用来传递用户真实 IP，同时后端 server 配套也要在 listen 规则里面配置接受 proxy_protocol
        ssl_preread on;
    }
}

http {
  # 这块保持不变即可
}

# =================================
http {
    # 如果你要记录 proxy protocol 日志，请按需配置一些变量，$proxy_protocol_addr 就是客户端真实 IP
    # https://docs.nginx.com/nginx/admin-guide/load-balancer/using-proxy-protocol
    # log_format combined '$proxy_protocol_addr - $remote_user [$time_local] '
    #                     '"$request" $status $body_bytes_sent '
    #                     '"$http_referer" "$http_user_agent"';
    server {
        listen 10242 proxy_protocol;# 注意这里新增了协议类型
        server_name  vmess.nlist.xyz;
        # ...  
        # 省略一些配置示例
        # ...
    }
}

# https://www.orzlee.com/proxy/2021/04/13/nginx-sni-offload-port-multiplexing-uses-xray-vless-xtls.html/comment-page-1
# ===================================
# 伪装和业务站点
http {
  set_real_ip_from 127.0.0.1; # 获取真实客户IP，不然全是127.0.0.1
  real_ip_header proxy_protocol;
  port_in_redirect off; # 重定向去掉端口号

  fastcgi_connect_timeout 300;
  fastcgi_send_timeout 300;
  fastcgi_read_timeout 300;
  fastcgi_buffer_size 64k;
  fastcgi_buffers 4 64k;
  fastcgi_busy_buffers_size 128k;
  fastcgi_temp_file_write_size 256k;

  server {
      listen 80;
      server_name x.example.com;
      return 301 https://x.example.com$request_uri;
  }

  server {
    # 伪装站点由Xray处理SSL
    listen 127.0.0.1:6001 proxy_protocol; # xray http/1.1
    listen 127.0.0.1:6002 proxy_protocol http2; # xray http/2

    server_name x.example.com;
    index index.html index.htm index.php;
    root /home/wwwroot/default;
  }

  server {
    listen 80;
    server_name example.com;
    return 301 https://example.com$request_uri;
  }

  server {
    listen 127.0.0.1:6003 proxy_protocol ssl http2;

    server_name example.com;
    root /home/wwwroot/example.com;
    index index.html index.htm index.php;

    ssl_certificate /etc/ssl/nginx/example.com.pem;
    ssl_certificate_key /etc/ssl/nginx/example.com.key;

    include enable-php-pathinfo.conf;

    location ~ \.php$ {
      # fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
      fastcgi_pass 127.0.0.1:9000;
      # fastcgi_index index.php;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      include fastcgi_params;
    }
  }
}


${Domain_SNI} {
    root * /usr/share/caddy
    file_server
    log {
        output file /usr/share/caddy/access.log
    }
    tls ${Cert_Email}
    // 泛域名证书申请 https://dengxiaolong.com/caddy/zh/automatic-https.html
    // tls {
    //     dns ${dns_Provider} ${ACCESS_KEY}
    //     protocols tls1.2 tls1.3
    //     ciphers TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
    //     curves x25519
    // }
    @mywebsocket {
        path ${network_path}
        header Connection *Upgrade*
        header Upgrade websocket
    }
    reverse_proxy @mywebsocket localhost:${inbound_port}
}
